name: Python

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"

jobs:
  lint:
    name: Lint and documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install tools
        run: pip install flake8 wheel docstring-parser
      - name: Lint
        run: flake8 substra
      - name: Install substra
        run: pip install -e .[test]
      - name: Generate and validate CLI documentation
        run: |
          pip install pydantic==1.8.2
          python bin/generate_cli_documentation.py --output-path references/cli.md.tmp
          cmp --silent references/cli.md references/cli.md.tmp
      - name: Generate and validate SDK documentation
        run: |
          python bin/generate_sdk_documentation.py --output-path='references/sdk.md.tmp'
          cmp --silent references/sdk.md references/sdk.md.tmp
          python bin/generate_sdk_schemas_documentation.py --output-path references/sdk_schemas.md.tmp
          cmp --silent references/sdk_schemas.md references/sdk_schemas.md.tmp
          python bin/generate_sdk_schemas_documentation.py --models --output-path='references/sdk_models.md.tmp'
          cmp --silent references/sdk_models.md references/sdk_models.md.tmp
      - name: Documentation artifacts
        uses: actions/upload-artifact@v2
        if: always()
        with:
          retention-days: 1
          name: references
          path: references/*.tmp
  tests:
    runs-on: ubuntu-latest
    env:
      XDG_RUNTIME_DIR: /home/runner/.docker/run
      DOCKER_HOST: unix:///home/runner/.docker/run/docker.sock
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.7', '3.8', '3.9' ]
    name: Tests on Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Install Docker rootless
        run: |
          sudo systemctl disable --now docker.service
          export FORCE_ROOTLESS_INSTALL=1
          curl -fsSL https://get.docker.com/rootless | sh
      - name: Set up gcloud Cloud SDK environment to pull the Docker images
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - name: gcloud configure docker
        run: |
          gcloud auth configure-docker
          export PATH=/home/runner/bin:$PATH
          /home/runner/bin/dockerd-rootless.sh &  # Start Docker rootless in the background
      - name: Install substra tools
        run: pip install -i https://${{ secrets.OWKIN_PYPI_USER }}:${{ secrets.OWKIN_PYPI_PASSWORD }}@pypi.owkin.com/simple/ 'substratools>=0.8.0'
      - name: Install substra
        run: pip install -e .[test]
      - name: Test
        run: |
          export PATH=/home/runner/bin:$PATH
          python setup.py test
